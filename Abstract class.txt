Abstract class shape
abstract class Shape
{
    abstract double calculateArea();
}

class Rectangle extends Shape
{
    private double width;
    private double height;

    public Rectangle(double width, double height)
{
        this.width = width;
        this.height = height;
    }

  
    double calculateArea()
{
        return width * height;
    }
}

class Circle extends Shape
{
    private double radius;

    public Circle(double radius)
{
        this.radius = radius;
    }


    double calculateArea()
{
        return Math.PI * radius * radius;
    }
}

class Triangle extends Shape
{
    private double base;
    private double height;

    public Triangle(double base, double height)
{
        this.base = base;
        this.height = height;
    }

  
    double calculateArea()
{
        return 0.5 * base * height;
    }
}

class ShapeCalculator {
    void printArea(Shape shape) {
        double area = shape.calculateArea();
        System.out.println("Area: " + area);
    }
}

public class Main
{
    public static void main(String[] args)
{
        ShapeCalculator calculator = new ShapeCalculator();

        Rectangle rectangle = new Rectangle(5, 10);
        Circle circle = new Circle(3);
        Triangle triangle = new Triangle(4, 6);

        calculator.printArea(rectangle);
        calculator.printArea(circle);
        calculator.printArea(triangle);
    }
}